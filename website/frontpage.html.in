<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN"
        "http://www.w3.org/TR/html4/strict.dtd">
@# This file is processed by EmPy
@{
from colorize import colorize
import time
import release
last_modified = release.last_modified(empy.identify()[0])
try:
    base
except NameError:
    base = False
}
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
  <meta name="author" content="John J. Lee &lt;jjl@@pobox.com&gt;">
  <meta name="date" content="@(time.strftime("%Y-%m-%d", last_modified))">
  <meta name="keywords" content="Python,modules,HTTP,HTML,cookies,forms,tables,client,client-side,urllib2,urllib,piddle,XFig,mail,unix,ISI,UKWoS,bell-ringing,method,diagram">
  <title>Python bits</title>
  <style type="text/css" media="screen">@@import "../styles/style.css";</style>
  @[if base]<base href="http://wwwsearch.sourceforge.net/">@[end if]
</head>
<body>

<div id="sf"><a href="http://sourceforge.net">
<img src="http://sourceforge.net/sflogo.php?group_id=48205&amp;type=2"
 width="125" height="37" alt="SourceForge.net Logo"></a></div>

<h1>Python bits</h1>

<div id="Content">

<p>Officially this is the wwwsearch page, but since that doesn't exist other
than on paper, here is some Python code I've written.  Mostly these are modules
for client-side web programming, but there are a few random bits of code too.
All are free (beer &amp; speech).

<hr>

<h2>Subversion repository</h2>

<p>Thanks to the people at codespeak.net for generously allowing use of their repository.

<p>To checkout Subversion SVN source, e.g.:

<p><code>svn co http://codespeak.net/svn/wwwsearch/mechanize/trunk/ mechanize</code>
<p><code>svn co http://codespeak.net/svn/wwwsearch/ClientForm/trunk/ ClientForm</code>

<h2>Client-side web programming tools for web scraping and web functional testing</h2>

<p>Please use the <a
href="http://lists.sourceforge.net/lists/listinfo/wwwsearch-general">
mailing list</a> for questions about these web client modules.

<h3><a href="mechanize/">mechanize</a></h3>

<p>Beta release.

<p>Stateful browser-like web scraping, after Andy Lester's Perl module <a
href="http://search.cpan.org/dist/WWW-Mechanize/"><code>WWW::Mechanize</code></a>.
Requires Python 2.2 or newer, <code>pullparser</code>, <code>ClientForm</code>
and <code>ClientCookie</code>.  BSD license.</p>


<h3><a href="ClientForm/">ClientForm</a></h3>

<p>Client-side HTML form handling.  Requires Python 1.5.2 or better.  BSD
license.


<br><hr>

<h2 class="warning">Unmaintained Client-side web code</h2>

<h3><a href="ClientCookie/">ClientCookie</a></h3>

<p>Now part of <a href="mechanize">mechanize</a>.

<p>Client-side HTTP cookie handling.  Optional features: <code>urllib2</code>
support, seekable responses, handling of <code>HTTP-EQUIV</code>, Refresh
redirection, <code>Referer</code> and <code>robots.txt</code>.  Requires Python
2.0 or better.  BSD license.

<h3><a href="DOMForm/">DOMForm</a></h3>

<p>Alpha release.  Requires Python 2.3 (probably 2.2 would work with minor
tweaking, but I haven't checked).  BSD-ish licenses (see the COPYING file for
full details: there are several licenses, due to the inclusion of code from
several libraries).  The JavaScript support is incomplete and buggy, but the
ClientForm work-alike part is relatively stable.

<p>Supports both the ClientForm and HTML DOM interfaces (plus &quot;very
alpha&quot; JavaScript support).  The ability to switch back and forth between
the two interfaces allows simpler code than would result from using either
interface alone.


<h3><a href="python-spidermonkey/">python-spidermonkey</a></h3>

<p>Alpha release.

<p>Python/JavaScript bridge module, making use of Mozilla's <a
href="http://www.mozilla.org/js/spidermonkey/">spidermonkey</a> JavaScript
implementation.  GPL.


<h3><a href="ClientTable/">ClientTable</a></h3>

<p>Very early alpha release!

<p>Client-side HTML table handling.  Currently requires Python 2.2 or better.
MIT license.


<h3><a href="pullparser/">pullparser</a></h3>

<p>Now part of <a href="mechanize">mechanize</a>, but the interface is
not public.

<p>Beta release.

<p>A simple "pull API" for HTML parsing, after Perl's
<code>HTML::TokeParser</code>.  Requires Python 2.2 or better.  BSD license.


<h3><a href="bits/urllib2_152.py">Python 1.5.2-compatible urllib2.py</a></h3>
<p>and <a href="bits/urllib_152.py">a urllib.py to accompany it</a>.

<p>I'm not planning to maintain this any more (not that it ever saw any
maintenance...).

<p>Not well-tested, I must confess: the project for which I wanted these has
been dormant for a while, and I haven't got round to running the standard
library tests yet so it's possible there are some remaining 1.5.2-incompatible
bits in here.

<p>Not much to be said about this, other than that it derives from the Python
2.1 CVS maintenance branch.  If you use this <code>urllib2</code>, use the
<code>urllib</code> from here, too.  Python license, of course.

<hr>

<a name="other"></a>
<h2>Other stuff</h2>

<h3><a href="bits/piddleFIG.py">piddleFIG</a></h3>

<p><strong>Now distributed with PIDDLE itself.</strong>

<p>Note: Since I wrote this, I discovered <a
href="http://sketch.sourceforge.net/">sketch</a>, which is better than XFig in
many ways, and is extensible and scriptable in Python.

<p>An <a href="http://www.xfig.org/">XFig</a> backend for <a
href="http://piddle.sourceforge.net/">PIDDLE</a> (Plug-In Drawing, Does Little
Else).  Requires Python 2.0 or better.  If you're installing into an old PIDDLE
installation, all you need to do is drop it in with the rest of the backends
(piddlePS.py, piddlePDF.py, etc).


<h3><a href="bits/mailtidy.py">mailtidy.py</a></h3>

<p>Just a little script to remove duplicate mail from unix mailboxes (also
known as mbox format, or V7 format; used by pine and mutt, amongst other mail
clients).  This is very useful if like me you periodically back up your mail
from a server, but like to keep old messages around on the server too.  If you
do this, you end up with widely overlapping backups, which makes grepping
through them a pain.  Running this script over your backed-up mailboxes should
ensure you end up with exactly one copy of each message.  <i>Please</i> back up
your backed-up mailboxes first!  Requires Python 2.0 or better.  Public domain.


<p><em>Now for the really obscure stuff...</em>


<h3><a href="wos/ISI_uk.tar.gz">UK ISI Web of Science (WoS) search module</a></h3>

<p><strong>Note: This is almost certainly not working: I don't use this
database any more, and it's not even up-to-date with the current ClientCookie
and ClientForm interfaces.</strong>

<p>Python interface to the ISI database, via the UK Web of Science web site.
This is intended to be part of <a
href="http://canvas.gnome.org:65348/pybliographer/">pybliographer</a>, when I
get round to integrating it properly.  In the mean time, it works as a Python
module.  Requires Python 2.0 or better and both ClientCookie (>= 0.3.0b) and
ClientForm.  MIT license.


<a name="methoddiag"></a>
<h3><a href="method-diagram">Bell-ringing method diagram plotter</a></h3>

<p>Please don't ask me about bell-ringing, I know nothing about it.  This plots
diagrams <a href="method-diagram/GrandsireTriples.pdf">like this</a>.  Requires
<a href="http://www.reportlab.com/">reportlab</a>, and Python 2.0 or better.
There is a simple graphical interface to operate it, which requires <a
href="http://www.riverbankcomputing.co.uk/pyqt/index.php">PyQt</a> (which
itself requires Qt -- follow the link from the PyQt page).  The output is in
pdf format -- to view it, you need <a
href="http://www.adobe.com/products/acrobat/readstep2.html">Acrobat Reader</a>
or both <a href="http://www.cs.wisc.edu/~ghost/doc/AFPL/get800.htm">
ghostscript
</a>and
<a href="http://www.cs.wisc.edu/~ghost/gsview/index.htm">GSView</a>
(Windows) or ghostscript and gv (unix -- not sure where gv for unix
lives, but you probably already have these installed if you're on
linux).  MIT license.


<p>Please use the <a 
href="http://lists.sourceforge.net/lists/listinfo/wwwsearch-general">
mailing list</a> for questions about the web client modules.

<p><a href="mailto:jjl@@pobox.com">John J. Lee</a>,
@(time.strftime("%B %Y", last_modified)).

</div>

<div id="Menu">

@(release.navbar('Home'))

<br>

<a href="#other">Other stuff</a><br>

</div>

</body>
</html>
